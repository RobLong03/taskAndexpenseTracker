
services:
  spring-dockerized-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "18080:8080"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - C:\Users\vasan\eclipse-workspace\taskAndexpenseTracker\.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_CONFIG_LOCATION=file:/app/application.properties
    volumes:
      - ./src/main/resources/application.properties:/app/application.properties
    networks:
      - springboot-postgres-network

  db:
    image: postgres:15.3
    ports:
      - "15432:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./src/main/resources/db_migration/init_all.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - springboot-postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pgdata:

networks:
  springboot-postgres-network:
    name: springboot-postgres-network
